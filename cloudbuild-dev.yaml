#
# Use artifact registry over container registry so we can keep it private and
# shared across projects/environments. Container registry only allows private
# single project use in the form similar to
# gcr.io/${PROJECT_ID}/${REPO_NAME}:dev-${SHORT_SHA}
#
# References
# [general]
#   * https://cloud.google.com/run/docs/how-to
#   * https://codelabs.developers.google.com/codelabs/cloud-spring-petclinic-cloudsql
# [maven-repository]
#   * https://cloud.google.com/artifact-registry/docs/java/quickstart (Closed Alpha)
# [cloud-sql]
#   * https://cloud.google.com/sql/docs/mysql/instance-access-control
#   * https://cloud.google.com/sql/docs/mysql/connect-run#private-ip
#   * https://cloud.google.com/sql/docs/mysql/connect-run#java_1
# [service-account]
#   * https://cloud.google.com/run/docs/configuring/service-accounts
# [local]
#   * https://cloud.google.com/sql/docs/mysql/quickstart-proxy-test
# [tips]
#   * https://cloud.google.com/run/docs/tips/general
#   * https://cloud.google.com/run/docs/tips/java

steps:
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        set -ex
        docker build -t "${_ARTIFACT_REGISTRY}/${REPO_NAME}:dev-${SHORT_SHA}" .
        docker push "${_ARTIFACT_REGISTRY}/${REPO_NAME}:dev-${SHORT_SHA}"

  # https://cloud.google.com/run/docs/configuring/environment-variables
  #- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  #  entrypoint: /bin/sh
  #  args:
  #    - "-c"
  #    - |
  #      set -ex
  #      gcloud run deploy ${REPO_NAME}-${BRANCH_NAME} \
  #        --image ${_ARTIFACT_REGISTRY}/${REPO_NAME}:dev-${SHORT_SHA} \
  #        --region ${_DEFAULT_REGION} \
  #        --platform managed \
  #        --service-account project-service-account@${PROJECT_ID}.iam.gserviceaccount.com \
  #        --allow-unauthenticated \
  #        --memory 512Mi \
  #        --vpc-connector ${_CONNECTOR_NAME} \
  #        --set-cloudsql-instances ${_CLOUD_MYSQL} \
  #        --update-env-vars MYSQL_CONN=${_CLOUD_MYSQL} \
  #        --update-env-vars MYSQL_DB=petclinic \
  #        --update-env-vars MYSQL_USER=app \
  #        --update-env-vars MYSQL_PASS=PaSsWoRd \
          # --vpc-egress # all|private-ranges-only(default) \
          # --port 8080 \

# project-service-account@prj-sre-d-sandbox-run-c366.iam.gserviceaccount.com
# p195303305359-xdldiw@gcp-sa-cloud-sql.iam.gserviceaccount.com
#
# We already pushed the image in the first step as we need it to use it in the following deploy step
# images:
#   - "${_DEFAULT_REGION}-docker.pkg.dev/${PROJECT_ID}/container-repository/${REPO_NAME}:dev-${SHORT_SHA}"

# Variables defined here will not override the ones supplied by our build
# trigger. These variables are considered defaults if the value from our
# build trigger is empty or does not exist.
# https://cloud.google.com/cloud-build/docs/configuring-builds/substitute-variable-values
substitutions:
  _POLICY_REPO: '' # add path to policies here https://github.com/forseti-security/policy-library/blob/master/docs/user_guide.md#how-to-use-terraform-validator

# Cloud Build Timeout
timeout: 3600s
